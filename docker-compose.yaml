version: '3.7'

services:
  # PostgreSQL database
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-mlflowdb}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MinIO server
  minio:
    image: minio/minio
    hostname: minio
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      # MinIO Console is available at http://localhost:9001
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio_user}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio_password}
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # Create a bucket named "bucket" if it doesn't exist
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      mc mb minio/bucket --ignore-existing  &&
      mc mb minio/artifacts --ignore-existing  &&
      mc mb minio/data --ignore-existing  &&
      mc cp --recursive /data minio/
      "
    volumes:
      - ./data:/data

  mlflow_server:
    restart: always
    build: ./mlflow_server
    image: mlflow_server
    container_name: mlflow_server
    hostname: mlflow_server
    depends_on:
      - postgres
    ports:
      - "${MLFLOW_PORT:-5000}"
      - 32785:32785
    # networks:
    #   - frontend
    #   - backend
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY:-minio_user}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY:-minio_password}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_S3_IGNORE_TLS=true
      - MLFLOW_BUCKET_NAME=bucket
    command: >
      mlflow server
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --host 0.0.0.0
      --port 5000
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mageai:
    image: mageai
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    build: ./mage_server
    environment:
      - USER_CODE_PATH=/home/src/${PROJECT_NAME}
      - ENV=${ENV}
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY:-minio_user}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY:-minio_password}
      - AWS_REGION=${AWS_REGION:-us-west-2}
      - AWS_ENDPOINT=${AWS_ENDPOINT:-http://minio:9000}
    ports:
      - 6789:6789
    volumes:
      - ./mage_server:/home/src/
    restart: on-failure:5


volumes:
  postgres_data:
  minio_data:

  # networks:
  #   frontend:
  #     driver: bridge
  #   backend:
  #     driver: bridge

